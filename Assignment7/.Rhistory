## Best arma is (3, 0, 2)
View(best.arma)
arma.model <- arima(icecream.decompose$random, order = c(4, 0, 4))
acf(icecream.ts)
pacf(icecream.ts)
f_acfplots(icecream.ts)
f_acfplots <- function(ts) {
print(acf(ts))
print(pacf(ts))
}
f_acfplots(icecream.ts)
f_acfplots(icecream.decompose$random)
f_acfplots(ts(icecream.decompose$random))
f_acfplots(ts(icecream.decompose$random), na.action = na.pass)
?acf
ts(icecream.decompose)
ts(icecream.decompose$random)
f_acfplots(ts(icecream.decompose$random), na.action = na.pass)
f_acfplots(ts(icecream.decompose$random))
f_acfplots <- function(ts) {
print(acf(ts), na.action = na.pass)
print(pacf(ts), na.action = na.pass)
}
f_acfplots(icecream.ts)
f_acfplots(ts(icecream.decompose$random))
acf(ts(icecream.decompose$random))
acf(ts(icecream.decompose$random), na.action = na.pass)
pacf(ts(icecream.decompose$random), na.action = na.pass)
f_acfplots <- function(ts) {
print(acf(ts, na.action = na.pass))
print(pacf(ts, na.action = na.pass))
}
f_acfplots(icecream.ts)
f_acfplots(ts(icecream.decompose$random))
arma.model <- arima(icecream.decompose$random, order = c(4, 0, 4))
f_acfplots(arma.model$residuals)
plot(icecream.decompose)
forecast(arma.model, h = 12)
?arima
icecream.decompose$seasonal
icecream.decompose$trend
icecream.decompose$trend[12]
icecream.decompose$trend[60]
icecream.decompose$trend[68]
icecream.decompose$trend[90]
as.data.frame(icecream.decompose$trend)
ts.mean <- as.data.frame(icecream.decompose$trend) %>% na.rm
ts.mean <- as.data.frame(icecream.decompose$trend) %>% na.rm()
ts.mean <- as.data.frame(icecream.decompose$trend) %>% na.omit()
View(ts.mean)
ts.mean <- ts.mean[nrow(ts.mean), 1]
forecast(icecream.decompose$seasonal)
forecast(icecream.decompose$seasonal, h = 12)
ts.seasonal <- forecast(icecream.decompose$seasonal, h = 12)
ts.random <- forecast(arma.model, h = 12)
ts.seasonal
ts.random
?forecast
arma.model <- arima(icecream.ts,
order = c(4, 0, 4),
seasonal = list(order = c(2, 1, 0), period = 12))
#
f_acfplots(arma.model$residuals)
ts.random <- forecast(arma.model, h = 12)
ts.forecast <- forecast(arma.model, h = 12)
ts.forecast
icecream.ts
qqnorm(arma.model$residuals)
plot(arma.model$x)
plot(arma.model)
plot(arma.model$coef)
plot(arma.model$series)
lines(fitted(arma.model))
predict(arma.model, n.ahead = 12)
plot(ts.forecast)
predict(arma.model, n.ahead = 24)
ts.forecast <- forecast(arma.model, h = 24)
plot(ts.forecast)
best.rand.arma <- f_best_arma(icecream.decompose$random)
View(best.rand.arma)
best.seasonal.arma <- f_best_arma(icecream.decompose$seasonal)
f_best_arma <- function(decomp.random, p.range = 0:4, d.range = 0, q.range = 0:4) {
arma.variants <- expand.grid(p.range, d.range, q.range)
colnames(arma.variants) <- c("p", "d", "q")
arma.variants$arma <- Inf
for (i in 1:nrow(arma.variants)) {
arma <- arima(decomp.random, order = c(arma.variants$p[i], arma.variants$d[i], arma.variants$q[i]))
arma.variants$arma[i] <- arma$aic
}
return(arma.variants)
}
best.rand.arma <- f_best_arma(icecream.decompose$random)
# Best random arma is (4, 0, 4)
best.seasonal.arma <- f_best_arma(icecream.decompose$seasonal, p.range = 0:2, d.range = 0:2, q.range = 0)
View(best.seasonal.arma)
## Make the final arma model
arma.model <- arima(icecream.ts,
order = c(4, 0, 4),
seasonal = list(order = c(2, 0, 0), period = 12))
## acf plots of arma model
f_acfplots(arma.model$residuals)
qqnorm(arma.model$residuals)
ts.forecast <- forecast(arma.model, h = 12)
plot(ts.forecast)
ts.forecast
arma.model <- arima(icecream.ts,
order = c(4, 0, 4),
seasonal = list(order = c(2, 1, 0), period = 12))
ts.forecast <- forecast(arma.model, h = 12)
ts.forecast
## Make the final arma model
arma.model <- arima(icecream.ts,
order = c(4, 0, 4),
seasonal = list(order = c(2, 0, 0), period = 12))
f_acfplots(arma.model$residuals)
qqnorm(arma.model$residuals)
f_acfplots(arma.model$residuals)
library(dplyr)
# library(zoo)
#==================
#### Load data ####
#==================
# Import the dataset
dairy.data <- read.csv('CADairyProduction.csv', header = TRUE)
# # Format a date column
# dairy.data$Date <- paste(dairy.data$Month, dairy.data$Year)
# dairy.data$Date <- as.yearmon(dairy.data$Date, "%b %Y")
# dairy.data$Date <- as.Date(dairy.data$Date)
## Make a time series object with ice cream production
icecream.ts <- ts(dairy.data$Icecream.Prod, start = 1995, frequency = 12)
plot(icecream.ts)
?plot
?adf.test
icecream.adf <- adf.test(icecream.ts, k = 12)
icecream.adf
library(dplyr)
library(tseries)
library(forecast)
#==================
#### Load data ####
#==================
## Import the dataset
dairy.data <- read.csv('CADairyProduction.csv', header = TRUE)
## Make a time series object with ice cream production
icecream.ts <- ts(dairy.data$Icecream.Prod, start = 1995, frequency = 12)
plot(icecream.ts, xlab = "Date", ylab = "Ice Cream Sales", main = "Ice Cream Sales over Time")
#=====================================
#### Stationarity test            ####
#=====================================
## Apply stationarity tests
icecream.adf <- adf.test(icecream.ts, k = 12)
icecream.adf
icecream.adf <- adf.test(icecream.ts, k = 6)
icecream.adf
icecream.adf <- adf.test(icecream.ts, k = 12)
icecream.adf
icecream.kpss <- kpss.test(icecream.ts, k = 12)
icecream.adf <- adf.test(icecream.ts, k = 12)
icecream.adf
icecream.diff.adf <- adf.test(diff(icecream.ts), k = 12)
icecream.diff.adf
f_acfplots(diff(icecream.ts))
f_acfplots <- function(ts) {
print(acf(ts, na.action = na.pass))
print(pacf(ts, na.action = na.pass))
}
f_acfplots(diff(icecream.ts))
icecream.decompose <- decompose(diff(icecream.ts))
plot(icecream.decompose)
qqnorm(icecream.decompose$random)
f_acfplots(ts(icecream.decompose$random))
f_best_arma <- function(decomp.random, p.range = 0:4, d.range = 0, q.range = 0:4) {
arma.variants <- expand.grid(p.range, d.range, q.range)
colnames(arma.variants) <- c("p", "d", "q")
arma.variants$arma <- Inf
for (i in 1:nrow(arma.variants)) {
arma <- arima(decomp.random, order = c(arma.variants$p[i], arma.variants$d[i], arma.variants$q[i]))
arma.variants$arma[i] <- arma$aic
}
return(arma.variants)
}
best.rand.arma <- f_best_arma(icecream.decompose$random)
best.seasonal.arma <- f_best_arma(icecream.decompose$seasonal, p.range = 0:2, d.range = 0:2, q.range = 0)
View(best.rand.arma)
View(best.seasonal.arma)
arma.model <- arima(diff(icecream.ts),
order = c(4, 0, 2),
seasonal = list(order = c(2, 0, 0), period = 12))
## acf plots of arma model
f_acfplots(arma.model$residuals)
qqnorm(arma.model$residuals)
arma.model <- arima(diff(icecream.ts),
order = c(4, 0, 2),
seasonal = list(order = c(2, 0, 0), period = 12))
zz <- diff(icecream.ts)
arma.model <- arima(diff(icecream.ts),
order = c(4, 0, 2),
seasonal = list(order = c(2, 0, 0), period = 11))
f_acfplots(arma.model$residuals)
qqnorm(arma.model$residuals)
ts.forecast <- forecast(arma.model, h = 12)
ts.forecast
plot(ts.forecast)
ts.forecast <- forecast(arma.model, h = 11)
ts.forecast
plot(ts.forecast)
arma.data <- diff(icecream.ts)
f_acfplots(arma.data)
f_acfplots <- function(ts) {
print(acf(ts, na.action = na.pass))
print(pacf(ts, na.action = na.pass))
}
f_acfplots(arma.data)
icecream.decompose <- decompose(arma.data)
plot(icecream.decompose)
qqnorm(icecream.decompose$random)
f_acfplots(ts(icecream.decompose$random))
f_best_arma <- function(decomp.random, p.range = 0:4, d.range = 0, q.range = 0:4) {
arma.variants <- expand.grid(p.range, d.range, q.range)
colnames(arma.variants) <- c("p", "d", "q")
arma.variants$arma <- Inf
for (i in 1:nrow(arma.variants)) {
arma <- arima(decomp.random, order = c(arma.variants$p[i], arma.variants$d[i], arma.variants$q[i]))
arma.variants$arma[i] <- arma$aic
}
return(arma.variants)
}
best.rand.arma <- f_best_arma(icecream.decompose$random)
# Best random arma is (4, 0, 2)
best.seasonal.arma <- f_best_arma(icecream.decompose$seasonal, p.range = 0:2, d.range = 0:2, q.range = 0)
# Best seasonal coefficients are (2,0,0)
## Make the final arma model
arma.model <- arima(arma.data,
order = c(4, 0, 2),
seasonal = list(order = c(2, 0, 0),
period = 12))
arma.model <- auto.arima(arma.data, max.p=4, max.q=4,
max.P=4, max.Q=4, max.order=5, max.d=0, max.D=2,
start.p=0, start.q=0, start.P=0, start.Q=0)
f_acfplots(arma.model$residuals)
qqnorm(arma.model$residuals)
arma.model
arma.model <- auto.arima(arma.data, max.p=4, max.q=4,
max.P=4, max.Q=4, max.order=6, max.d=0, max.D=2,
start.p=0, start.q=0, start.P=0, start.Q=0)
arma.model
ts.forecast <- forecast(arma.model, h = 12)
ts.forecast
## Plot the forecast:
plot(ts.forecast)
# Forecast ice cream
ts.forecast <- forecast(arma.model, h = 24)
ts.forecast
## Plot the forecast:
plot(ts.forecast)
arma.data <- diff(icecream.ts)
f_acfplots <- function(ts) {
print(acf(ts, na.action = na.pass))
print(pacf(ts, na.action = na.pass))
}
f_acfplots(arma.data)
f_acfplots(ts(icecream.decompose$random))
ts.forecast <- forecast(arma.model, h = 24)
summary(ts.forecast)
f_acfplots(ts(icecream.decompose$random))
qqnorm(icecream.decompose$random)
arma.model <- auto.arima(arma.data, max.p=4, max.q=4,
max.P=4, max.Q=4, max.order=6, max.d=0, max.D=2,
start.p=0, start.q=0, start.P=0, start.Q=0)
arma.model
summary(arma.model)
seasonal.coeff <- f_best_arma(icecream.decompose$seasonal, d.range = 0:4)
f_best_arma <- function(decomp.random, p.range = 0:4, d.range = 0, q.range = 0:4) {
arma.variants <- expand.grid(p.range, d.range, q.range)
colnames(arma.variants) <- c("p", "d", "q")
arma.variants$arma <- Inf
for (i in 1:nrow(arma.variants)) {
arma <- arima(decomp.random, order = c(arma.variants$p[i], arma.variants$d[i], arma.variants$q[i]))
arma.variants$arma[i] <- arma$aic
}
return(arma.variants)
}
seasonal.coeff <- f_best_arma(icecream.decompose$seasonal, d.range = 0:4)
library(dplyr)
library(tseries)
library(forecast)
#==================
#### Load data ####
#==================
## Import the dataset
dairy.data <- read.csv('CADairyProduction.csv', header = TRUE)
## Make a time series object with ice cream production
icecream.ts <- ts(dairy.data$Icecream.Prod, start = 1995, frequency = 12)
plot(icecream.ts, xlab = "Date", ylab = "Ice Cream Sales", main = "Ice Cream Sales over Time")
#=====================================
#### Stationarity test            ####
#=====================================
## Apply stationarity tests
# Stationarity on raw data
icecream.adf <- adf.test(icecream.ts, k = 12)
icecream.adf
# Stationarity on diff
icecream.diff.adf <- adf.test(diff(icecream.ts), k = 12)
icecream.diff.adf
## Based on above test, we will use the diff of the time series
## for modeling
arma.data <- diff(icecream.ts)
## Print the autocorrelation plots of the chosen time series
f_acfplots <- function(ts) {
print(acf(ts, na.action = na.pass))
print(pacf(ts, na.action = na.pass))
}
f_acfplots(arma.data)
#=====================================
#### Seasonality  test            ####
#=====================================
## Extract seasonality from decomposition
icecream.decompose <- decompose(arma.data)
plot(icecream.decompose)
## Do the residuals look like white noise?
qqnorm(icecream.decompose$random)
## Plot acf plots
f_acfplots(ts(icecream.decompose$random))
f_best_arma <- function(decomp.random, p.range = 0:4, d.range = 0, q.range = 0:4) {
arma.variants <- expand.grid(p.range, d.range, q.range)
colnames(arma.variants) <- c("p", "d", "q")
arma.variants$arma <- Inf
for (i in 1:nrow(arma.variants)) {
arma <- arima(decomp.random, order = c(arma.variants$p[i], arma.variants$d[i], arma.variants$q[i]))
arma.variants$arma[i] <- arma$aic
}
return(arma.variants)
}
seasonal.coeff <- f_best_arma(icecream.decompose$seasonal, d.range = 0:4)
View(best.seasonal.arma)
?auto.arima
arma.model <- auto.arima(arma.data,
max.p=4, max.q=4,
max.P=4, max.Q=4,
max.order=8,
max.d=0, max.D=2,
start.p=0, start.q=0,
start.P=0, start.Q=0,
stationary = TRUE,
seasonal = TRUE)
arma.model
f_acfplots(arma.model$residuals)
qqnorm(arma.model$residuals)
ts.forecast <- forecast(arma.model, h = 24)
summary(ts.forecast)
plot(ts.forecast)
arma.model <- auto.arima(arma.data,
max.p=3, max.q=3,
max.P=2, max.Q=2,
max.order=5,
max.d=2, max.D=1,
start.p=0, start.q=0,
start.P=0, start.Q=0,
stationary = TRUE,
seasonal = TRUE)
arma.model
library(dplyr)
library(tseries)
library(forecast)
#==================
#### Load data ####
#==================
## Import the dataset
dairy.data <- read.csv('CADairyProduction.csv', header = TRUE)
## Make a time series object with ice cream production
icecream.ts <- ts(dairy.data$Icecream.Prod, start = 1995, frequency = 12)
plot(icecream.ts, xlab = "Date", ylab = "Ice Cream Sales", main = "Ice Cream Sales over Time")
#=====================================
#### Stationarity test            ####
#=====================================
## Apply stationarity tests
# Stationarity on raw data
icecream.adf <- adf.test(icecream.ts, k = 12)
icecream.adf
# Stationarity on diff
icecream.diff.adf <- adf.test(diff(icecream.ts), k = 12)
icecream.diff.adf
## Based on above test, we will use the diff of the time series
## for modeling
arma.data <- diff(icecream.ts)
## Print the autocorrelation plots of the chosen time series
f_acfplots <- function(ts) {
print(acf(ts, na.action = na.pass))
print(pacf(ts, na.action = na.pass))
}
f_acfplots(arma.data)
#=====================================
#### Seasonality  test            ####
#=====================================
## Extract seasonality from decomposition
icecream.decompose <- decompose(arma.data)
plot(icecream.decompose)
## Do the residuals look like white noise?
qqnorm(icecream.decompose$random)
## Plot acf plots
f_acfplots(ts(icecream.decompose$random))
#=====================================
#### Model                     ####
#=====================================
### Manually investigate arima coefficients
## Find the best arma order:
# f_best_arma <- function(decomp.random, p.range = 0:4, d.range = 0, q.range = 0:4) {
#   arma.variants <- expand.grid(p.range, d.range, q.range)
#   colnames(arma.variants) <- c("p", "d", "q")
#
#   arma.variants$arma <- Inf
#   for (i in 1:nrow(arma.variants)) {
#     arma <- arima(decomp.random, order = c(arma.variants$p[i], arma.variants$d[i], arma.variants$q[i]))
#     arma.variants$arma[i] <- arma$aic
#   }
#
#   return(arma.variants)
# }
#
# seasonal.coeff <- f_best_arma(icecream.decompose$seasonal, d.range = 0:4)
## Make the final arma model
arma.model <- auto.arima(arma.data,
max.p=3, max.q=3,
max.P=2, max.Q=2,
max.order=5,
max.d=2, max.D=1,
start.p=0, start.q=0,
start.P=0, start.Q=0,
stationary = TRUE,
seasonal = TRUE)
arma.model
## Make the final arma model
arma.model <- auto.arima(arma.data,
max.p=3, max.q=3,
max.P=2, max.Q=2,
max.order=5,
max.d=2, max.D=1,
start.p=0, start.q=0,
start.P=0, start.Q=0)
arma.model
arma.model <- auto.arima(arma.data,
max.p=3, max.q=3,
max.P=0, max.Q=2,
max.order=5,
max.d=2, max.D=1,
start.p=0, start.q=0,
start.P=0, start.Q=0)
arma.model
f_acfplots(arma.model$residuals)
qqnorm(arma.model$residuals)
ts.forecast <- forecast(arma.model, h = 24)
plot(ts.forecast)
arma.model <- auto.arima(arma.data,
max.p=3, max.q=3,
max.P=0, max.Q=2,
max.order=4,
max.d=2, max.D=1,
start.p=0, start.q=0,
start.P=0, start.Q=0)
arma.model
arma.model <- auto.arima(arma.data,
max.p=3, max.q=3,
max.d=2, max.D=1,
max.P=0, max.Q=2,
max.order=5,
start.p=0, start.q=0,
start.P=0, start.Q=0)
arma.model
arma.model <- auto.arima(arma.data,
max.p=3, max.d=2, max.q=3,
max.P=0, max.D=1, max.Q=2,
max.order=5,
start.p=0, start.q=0,
start.P=0, start.Q=0)
arma.model
arma.model <- auto.arima(arma.data,
max.p=0, max.d=2, max.q=3,
max.P=0, max.D=1, max.Q=2,
max.order=5,
start.p=0, start.q=0,
start.P=0, start.Q=0)
arma.model
ts.forecast <- forecast(arma.model, h = 24)
plot(ts.forecast)
arma.model <- auto.arima(arma.data,
max.p=3, max.d=3, max.q=3,
max.P=3, max.D=3, max.Q=3,
max.order=5,
start.p=0, start.q=0,
start.P=0, start.Q=0)
arma.model
arma.model <- auto.arima(arma.data,
max.p=3, max.d=3, max.q=3,
max.P=0, max.D=3, max.Q=3,
max.order=5,
start.p=0, start.q=0,
start.P=0, start.Q=0)
arma.model
arma.model <- auto.arima(arma.data,
max.p=3, max.d=3, max.q=0,
max.P=0, max.D=3, max.Q=3,
max.order=5,
start.p=0, start.q=0,
start.P=0, start.Q=0)
arma.model
f_acfplots(arma.model$residuals)
qqnorm(arma.model$residuals)
ts.forecast <- forecast(arma.model, h = 24)
plot(ts.forecast)
f_acfplots(arma.model$residuals)
qqnorm(arma.model$residuals)
f_acfplots(ts(icecream.decompose$trend))
