install.packages("LearnBayes")
library(LearnBayes)
beta.par <- beta.select(list(p=0.5, x=0.1), list(p=0.75, x=.3))
beta.par ## The parameters of my Beta distribution
par(mfrow = c(4,1))
beta.par + c(6, 4)
triplot(beta.par, c(6, 4))
beta.par + c(6 + 6, 4 + 4)
triplot(beta.par, c(6 + 6, 4 + 4))
beta.par + c(6 + 6 + 12, 4 + 4 + 8)
triplot(beta.par, c(6 + 6 + 12, 4 + 4 + 8))
beta.par + c(6 + 6 + 12 + 12, 4 + 4 + 8 +8)
triplot(beta.par, c(6 + 6 + 12 + 12, 4 + 4 + 8 + 8))
library(LearnBayes)
#~~~~~~~~~~~~~~~~~~~~~~~~
#### National Priors ####
#~~~~~~~~~~~~~~~~~~~~~~~~
## Compute the beta prior from the reported national chances:
beta.prior <- beta.select(list(p=0.5, x=0.1), list(p=0.75, x=.3))
beta.prior
#~~~~~~~~~~~~~~~~~~~~~~~~
#### Update beliefs  ####
#~~~~~~~~~~~~~~~~~~~~~~~~
#   a. 2 texting out of 20 drivers
# b. 4 texting out of 20 drivers
# c. 1 texting out of 20 drivers
par(mfrow = c(3,1))
beta.prior + c(2 + 4 + 1, 18 + 16 + 19)
triplot(beta.prior, c(2 + 4 + 1, 18 + 16 + 19))
par(mfrow = c(1,1))
par(mfrow = c(3,1))
beta.prior + c(2, 18)
triplot(beta.prior, c(2, 18))
beta.prior + c(2 + 4, 18 + 16)
triplot(beta.prior, c(2 + 4, 18 + 16))
beta.prior + c(2 + 4 + 1, 18 + 16 + 19)
triplot(beta.prior, c(2 + 4 + 1, 18 + 16 + 19))
par(mfrow = c(1,1))
beta.post <- beta.prior + c(2 + 4 + 1, 18 + 16 + 19)
beta.post
post.sample <- rbeta(10000, beta.post[1], beta.post[2])
post.sample
par(mfrow = c(1,2))
quants = quantile(post.sample, c(0.05, 0.95))
breaks = seq(min(post.sample), max(post.sample), length.out = 41)
hist(post.sample, breaks = breaks,
main = 'Distribution of samples \n with 90% HDI',
xlab = 'Sample value',
ylab = 'Density')
abline(v = quants[1], lty = 3, col = 'red', lwd = 3)
abline(v = quants[2], lty = 3, col = 'red', lwd = 3)
qqnorm(post.sample)
par(mfrow = c(1,1))
quants
n <- 60
n <- 100
s <- 0:n
pred.probs <- pbetap(beta.prior, n, s)
plot(s, pred.probs, type="h",
main = 'Probability distribution of success in trail',
xlab = 'Successes')
discint(cbind(s, pred.probs), 0.90)
?discint
discint(cbind(s, pred.probs), 0.95)
discint(cbind(s, pred.probs), 0.90)
# > Of the next hundred drivers what are the number of texting drivers
# in the 90% HDI?
n <- 100
s <- 0:n
pred.probs <- pbetap(beta.prior, n, s)
plot(s, pred.probs, type="h",
main = 'Probability distribution of texters in observation',
xlab = 'Texters')
discint(cbind(s, pred.probs), 0.90)
abline(h = 0.01, lty = 3, col = 'red', lwd = 3)
pred.probs
cum.pred.probs <- cumsum(pred.probs)
cum.pred.probs
discrete.distribution <- discint(cbind(s, pred.probs), 0.90)
max(discrete.distribution$prob)
max(discrete.distribution$set)
plot(s, pred.probs, type="h",
main = 'Probability distribution of texters in observation',
xlab = 'Texters')
abline(v = max(discrete.distribution$set), lty = 3, col = 'red', lwd = 3)
abline(v = min(discrete.distribution$set), lty = 3, col = 'red', lwd = 3)
par(mfrow = c(4,1))
triplot(beta.prior)
beta.prior + c(2, 18)
triplot(beta.prior, c(2, 18))
beta.prior + c(2 + 4, 18 + 16)
triplot(beta.prior, c(2 + 4, 18 + 16))
beta.prior + c(2 + 4 + 1, 18 + 16 + 19)
triplot(beta.prior, c(2 + 4 + 1, 18 + 16 + 19))
par(mfrow = c(1,1))
par(mfrow = c(3,1))
beta.prior + c(2, 18)
triplot(beta.prior, c(2, 18))
beta.prior + c(2 + 4, 18 + 16)
triplot(beta.prior, c(2 + 4, 18 + 16))
beta.prior + c(2 + 4 + 1, 18 + 16 + 19)
triplot(beta.prior, c(2 + 4 + 1, 18 + 16 + 19))
par(mfrow = c(1,1))
beta.prior
beta.post
beta.prior
beta.post
plot(beta.prior)
n <- 100
s <- 0:n
pred.probs <- pbetap(beta.post, n, s)
discrete.distribution <- discint(cbind(s, pred.probs), 0.90)
discrete.distribution
plot(s, pred.probs, type="h",
main = 'Probability distribution of texters in observation',
xlab = 'Texters')
abline(v = max(discrete.distribution$set), lty = 3, col = 'red', lwd = 3)
abline(v = min(discrete.distribution$set), lty = 3, col = 'red', lwd = 3)
f_prob_dist <- function(n, beta) {
s <- 0:n
pred.probs <- pbetap(beta, n, s)
discrete.distribution <- discint(cbind(s, pred.probs), 0.90)
plot(s, pred.probs, type="h",
main = 'Probability distribution of texters in observation',
xlab = 'Texters')
abline(v = max(discrete.distribution$set), lty = 3, col = 'red', lwd = 3)
abline(v = min(discrete.distribution$set), lty = 3, col = 'red', lwd = 3)
}
f_prob_dist(beta.post)
f_prob_dist(n = 100, beta = beta.post)
f_prob_dist <- function(n = 100, beta) {
s <- 0:n
pred.probs <- pbetap(beta, n, s)
discrete.distribution <- discint(cbind(s, pred.probs), 0.90)
plot(s, pred.probs, type="h",
main = 'Probability distribution of texters in observation',
xlab = 'Texters')
abline(v = max(discrete.distribution$set), lty = 3, col = 'red', lwd = 3)
abline(v = min(discrete.distribution$set), lty = 3, col = 'red', lwd = 3)
}
f_prob_dist(n = 100, beta = beta.post)
f_prob_dist <- function(n = 100, beta) {
s <- 0:n
pred.probs <- pbetap(beta, n, s)
discrete.distribution <- discint(cbind(s, pred.probs), 0.90)
plot(s, pred.probs, type="h",
main = 'Probability distribution of texters in observation',
xlab = 'Texters')
abline(v = max(discrete.distribution$set), lty = 3, col = 'red', lwd = 3)
abline(v = min(discrete.distribution$set), lty = 3, col = 'red', lwd = 3)
}
f_prob_dist(n = 100, beta = beta.post)
f_prob_dist(beta = beta.prior)
par(mfrow = c(2,1))
f_prob_dist(beta = beta.prior)
f_prob_dist(beta = beta.post)
par(mfrow = c(1,1))
f_prob_dist <- function(n = 100, beta, title) {
s <- 0:n
pred.probs <- pbetap(beta, n, s)
discrete.distribution <- discint(cbind(s, pred.probs), 0.90)
plot(s, pred.probs, type="h",
main = title,
xlab = 'Texters')
abline(v = max(discrete.distribution$set), lty = 3, col = 'red', lwd = 3)
abline(v = min(discrete.distribution$set), lty = 3, col = 'red', lwd = 3)
}
f_prob_dist(beta = beta.post, title = "Posterior distribution of texters")
# > Are the drivers in this area better or worse that the national figures
# indicate?
par(mfrow = c(2,1))
f_prob_dist(beta = beta.prior, title = "Prior distribution of texters")
f_prob_dist(beta = beta.post, title = "Posterior distribution of texters")
par(mfrow = c(1,1))
quants
library(LearnBayes)
#~~~~~~~~~~~~~~~~~~~~~~~~
#### National Priors ####
#~~~~~~~~~~~~~~~~~~~~~~~~
# Nationally the chance that a driver is texting is:
#   > P = 0.5, at x = 0.1
#   > P = 0.75 at x = 0.3
## Compute the Beta prior, and report the coefficents
beta.prior <- beta.select(list(p=0.5, x=0.1), list(p=0.75, x=.3))
beta.prior
par(mfrow = c(3,1))
beta.prior + c(2, 18)
triplot(beta.prior, c(2, 18))
beta.prior + c(2 + 4, 18 + 16)
triplot(beta.prior, c(2 + 4, 18 + 16))
beta.prior + c(2 + 4 + 1, 18 + 16 + 19)
triplot(beta.prior, c(2 + 4 + 1, 18 + 16 + 19))
par(mfrow = c(1,1))
beta.post <- beta.prior + c(2 + 4 + 1, 18 + 16 + 19)
post.sample <- rbeta(10000, beta.post[1], beta.post[2])
par(mfrow = c(1,2))
quants = quantile(post.sample, c(0.05, 0.95))
breaks = seq(min(post.sample), max(post.sample), length.out = 41)
hist(post.sample, breaks = breaks,
main = 'Distribution of samples \n with 90% HDI',
xlab = 'Sample value',
ylab = 'Density')
abline(v = quants[1], lty = 3, col = 'red', lwd = 3)
abline(v = quants[2], lty = 3, col = 'red', lwd = 3)
qqnorm(post.sample)
par(mfrow = c(1,1))
quants
f_prob_dist <- function(n = 100, beta, title) {
s <- 0:n
pred.probs <- pbetap(beta, n, s)
discrete.distribution <- discint(cbind(s, pred.probs), 0.90)
plot(s, pred.probs, type="h",
main = title,
xlab = 'Texters')
abline(v = max(discrete.distribution$set), lty = 3, col = 'red', lwd = 3)
abline(v = min(discrete.distribution$set), lty = 3, col = 'red', lwd = 3)
}
f_prob_dist(beta = beta.post, title = "Posterior distribution of texters")
par(mfrow = c(2,1))
f_prob_dist(beta = beta.prior, title = "Prior distribution of texters")
f_prob_dist(beta = beta.post, title = "Posterior distribution of texters")
par(mfrow = c(1,1))
f_predicted_probs <- function(beta, n, s) {
pred.probs <- pbetap(beta, n, s)
return(pred.probs)
}
f_prob_dist <- function(n = 100, beta, title) {
# Function plots the distribution of events over n observations.
s <- 0:n
pred.probs <- f_predicted_probs(beta, n, s)
discrete.distribution <- discint(cbind(s, pred.probs), 0.90)
plot(s, pred.probs, type="h",
main = title,
xlab = 'Texters')
abline(v = max(discrete.distribution$set), lty = 3, col = 'red', lwd = 3)
abline(v = min(discrete.distribution$set), lty = 3, col = 'red', lwd = 3)
}
## Plot the posterior distribution over 100 observations
f_prob_dist(n = 100, beta = beta.post, title = "Posterior distribution of texters")
f_predicted_probs(beta.post, n = 100, s = 0:100)
max(f_predicted_probs(beta.post, n = 100, s = 0:100))
?max
which.max(f_predicted_probs(beta.post, n = 100, s = 0:100))
